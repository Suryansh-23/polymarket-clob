{"abi":[{"type":"function","name":"checkKey","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"configureOperatorSet","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"curveType","type":"uint8","internalType":"enum IKeyRegistrarTypes.CurveType"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deregisterKey","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getBN254Key","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"g1Point","type":"tuple","internalType":"struct BN254.G1Point","components":[{"name":"X","type":"uint256","internalType":"uint256"},{"name":"Y","type":"uint256","internalType":"uint256"}]},{"name":"g2Point","type":"tuple","internalType":"struct BN254.G2Point","components":[{"name":"X","type":"uint256[2]","internalType":"uint256[2]"},{"name":"Y","type":"uint256[2]","internalType":"uint256[2]"}]}],"stateMutability":"view"},{"type":"function","name":"getECDSAAddress","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getECDSAKey","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getKeyHash","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getOperatorSetCurveType","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]}],"outputs":[{"name":"","type":"uint8","internalType":"enum IKeyRegistrarTypes.CurveType"}],"stateMutability":"view"},{"type":"function","name":"isKeyGloballyRegistered","inputs":[{"name":"keyHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isRegistered","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"registerKey","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"pubkey","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"event","name":"AggregateBN254KeyUpdated","inputs":[{"name":"operatorSet","type":"tuple","indexed":false,"internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"newAggregateKey","type":"tuple","indexed":false,"internalType":"struct BN254.G1Point","components":[{"name":"X","type":"uint256","internalType":"uint256"},{"name":"Y","type":"uint256","internalType":"uint256"}]}],"anonymous":false},{"type":"event","name":"KeyDeregistered","inputs":[{"name":"operatorSet","type":"tuple","indexed":false,"internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"curveType","type":"uint8","indexed":false,"internalType":"enum IKeyRegistrarTypes.CurveType"}],"anonymous":false},{"type":"event","name":"KeyRegistered","inputs":[{"name":"operatorSet","type":"tuple","indexed":false,"internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"curveType","type":"uint8","indexed":false,"internalType":"enum IKeyRegistrarTypes.CurveType"},{"name":"pubkey","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"OperatorSetConfigured","inputs":[{"name":"operatorSet","type":"tuple","indexed":false,"internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"curveType","type":"uint8","indexed":false,"internalType":"enum IKeyRegistrarTypes.CurveType"}],"anonymous":false},{"type":"error","name":"ConfigurationAlreadySet","inputs":[]},{"type":"error","name":"InvalidCurveType","inputs":[]},{"type":"error","name":"InvalidKeyFormat","inputs":[]},{"type":"error","name":"InvalidKeypair","inputs":[]},{"type":"error","name":"KeyAlreadyRegistered","inputs":[]},{"type":"error","name":"KeyNotFound","inputs":[{"name":"operatorSet","type":"tuple","internalType":"struct OperatorSet","components":[{"name":"avs","type":"address","internalType":"address"},{"name":"id","type":"uint32","internalType":"uint32"}]},{"name":"operator","type":"address","internalType":"address"}]},{"type":"error","name":"OperatorSetNotConfigured","inputs":[]},{"type":"error","name":"ZeroAddress","inputs":[]},{"type":"error","name":"ZeroPubkey","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"checkKey((address,uint32),address)":"0a6ac264","configureOperatorSet((address,uint32),uint8)":"ea0d8149","deregisterKey(address,(address,uint32))":"87ab86f4","getBN254Key((address,uint32),address)":"9a43e3fb","getECDSAAddress((address,uint32),address)":"3b32a7bd","getECDSAKey((address,uint32),address)":"aa165c30","getKeyHash((address,uint32),address)":"ea194e2e","getOperatorSetCurveType((address,uint32))":"7cffe48c","isKeyGloballyRegistered(bytes32)":"dab42d7e","isRegistered((address,uint32),address)":"bd30a0b9","registerKey(address,(address,uint32),bytes,bytes)":"d40cda16","version()":"54fd4d50"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ConfigurationAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCurveType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidKeyFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidKeypair\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"KeyAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"KeyNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorSetNotConfigured\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroPubkey\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct BN254.G1Point\",\"name\":\"newAggregateKey\",\"type\":\"tuple\"}],\"name\":\"AggregateBN254KeyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"curveType\",\"type\":\"uint8\"}],\"name\":\"KeyDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"curveType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"}],\"name\":\"KeyRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"curveType\",\"type\":\"uint8\"}],\"name\":\"OperatorSetConfigured\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"checkKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"curveType\",\"type\":\"uint8\"}],\"name\":\"configureOperatorSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"deregisterKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getBN254Key\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct BN254.G1Point\",\"name\":\"g1Point\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BN254.G2Point\",\"name\":\"g2Point\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getECDSAAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getECDSAKey\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getKeyHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getOperatorSetCurveType\",\"outputs\":[{\"internalType\":\"enum IKeyRegistrarTypes.CurveType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"}],\"name\":\"isKeyGloballyRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"registerKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkKey((address,uint32),address)\":{\"details\":\"This function is called by the AVSRegistrar when an operator registers for an AVSOnly authorized callers for the AVS can call this functionReverts if operator doesn't have a registered key for this operator set\",\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to check and update\"},\"returns\":{\"_0\":\"whether the operator has a registered key\"}},\"configureOperatorSet((address,uint32),uint8)\":{\"details\":\"Only authorized callers for the AVS can configure operator sets\",\"params\":{\"curveType\":\"Type of curve (ECDSA, BN254)\",\"operatorSet\":\"The operator set to configure\"}},\"deregisterKey(address,(address,uint32))\":{\"details\":\"Can be called by avs directly or by addresses they've authorized via PermissionControllerReverts if key was not registeredKeys remain in global key registry to prevent reuse\",\"params\":{\"operator\":\"Address of the operator to deregister key for\",\"operatorSet\":\"The operator set to deregister the key from\"}},\"getBN254Key((address,uint32),address)\":{\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to get the key for\"},\"returns\":{\"g1Point\":\"The BN254 G1 public key\",\"g2Point\":\"The BN254 G2 public key\"}},\"getECDSAAddress((address,uint32),address)\":{\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to get the key for\"},\"returns\":{\"_0\":\"pubkey The ECDSA public key\"}},\"getECDSAKey((address,uint32),address)\":{\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to get the key for\"},\"returns\":{\"_0\":\"pubkey The ECDSA public key\"}},\"getKeyHash((address,uint32),address)\":{\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to get the key hash for\"},\"returns\":{\"_0\":\"keyHash The key hash\"}},\"getOperatorSetCurveType((address,uint32))\":{\"params\":{\"operatorSet\":\"The operator set to get configuration for\"},\"returns\":{\"_0\":\"The operator set configuration\"}},\"isKeyGloballyRegistered(bytes32)\":{\"params\":{\"keyHash\":\"Hash of the key\"},\"returns\":{\"_0\":\"True if the key is globally registered\"}},\"isRegistered((address,uint32),address)\":{\"params\":{\"operator\":\"Address of the operator\",\"operatorSet\":\"The operator set to check\"},\"returns\":{\"_0\":\"True if the key is registered\"}},\"registerKey(address,(address,uint32),bytes,bytes)\":{\"details\":\"Can be called by operator directly or by addresses they've authorized via PermissionControllerReverts if key is already registered\",\"params\":{\"operator\":\"Address of the operator to register key for\",\"operatorSet\":\"The operator set to register the key for\",\"pubkey\":\"Public key bytes\",\"signature\":\"Signature proving ownership (only needed for BN254 keys)\"}},\"version()\":{\"returns\":{\"_0\":\"The version string in SemVer format (e.g., \\\"1.1.1\\\")\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"KeyAlreadyRegistered()\":[{\"notice\":\"Key Management\"}]},\"kind\":\"user\",\"methods\":{\"checkKey((address,uint32),address)\":{\"notice\":\"Checks if an operator has a registered key\"},\"configureOperatorSet((address,uint32),uint8)\":{\"notice\":\"Configures an operator set with curve type\"},\"deregisterKey(address,(address,uint32))\":{\"notice\":\"Deregisters a cryptographic key for an operator with a specific operator set\"},\"getBN254Key((address,uint32),address)\":{\"notice\":\"Gets the BN254 public key for an operator with a specific operator set\"},\"getECDSAAddress((address,uint32),address)\":{\"notice\":\"Gets the ECDSA public key for an operator with a specific operator set\"},\"getECDSAKey((address,uint32),address)\":{\"notice\":\"Gets the ECDSA public key for an operator with a specific operator set as bytes\"},\"getKeyHash((address,uint32),address)\":{\"notice\":\"Gets the key hash for an operator with a specific operator set\"},\"getOperatorSetCurveType((address,uint32))\":{\"notice\":\"Gets the configuration for an operator set\"},\"isKeyGloballyRegistered(bytes32)\":{\"notice\":\"Checks if a key hash is globally registered\"},\"isRegistered((address,uint32),address)\":{\"notice\":\"Checks if a key is registered for an operator with a specific operator set\"},\"registerKey(address,(address,uint32),bytes,bytes)\":{\"notice\":\"Registers a cryptographic key for an operator with a specific operator set\"},\"version()\":{\"notice\":\"Returns the semantic version string of the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IKeyRegistrar.sol\":\"IKeyRegistrar\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer-contracts/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":@eigenlayer-middleware/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/\",\":@hourglass-monorepo/=../.devkit/contracts/lib/hourglass-monorepo/contracts/\",\":@openzeppelin-upgrades/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":@project/=src/\",\":ds-test/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/ds-test/src/\",\":eigenlayer-contracts/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/\",\":erc4626-tests/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=../.devkit/contracts/lib/forge-std/src/\",\":hourglass-monorepo/=../.devkit/contracts/lib/hourglass-monorepo/contracts/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":zeus-templates/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/\"]},\"sources\":{\"../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IKeyRegistrar.sol\":{\"keccak256\":\"0xb377c9c9acff800d4736f65dca009a749338886d3a3f4d18a6bf3c3f414cf7ec\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://44d50c3e8da0642cde59545285ef3649053eb3598d35fdb179894ff5951b4588\",\"dweb:/ipfs/QmZQSNMY54oqLEr8viBbnia12eAQU3h31p8eWktu9SNkas\"]},\"../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISemVerMixin.sol\":{\"keccak256\":\"0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e\",\"dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa\"]},\"../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BN254.sol\":{\"keccak256\":\"0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc\",\"dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6\"]},\"../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41\",\"dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ConfigurationAlreadySet"},{"inputs":[],"type":"error","name":"InvalidCurveType"},{"inputs":[],"type":"error","name":"InvalidKeyFormat"},{"inputs":[],"type":"error","name":"InvalidKeypair"},{"inputs":[],"type":"error","name":"KeyAlreadyRegistered"},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"address","name":"operator","type":"address"}],"type":"error","name":"KeyNotFound"},{"inputs":[],"type":"error","name":"OperatorSetNotConfigured"},{"inputs":[],"type":"error","name":"ZeroAddress"},{"inputs":[],"type":"error","name":"ZeroPubkey"},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}],"indexed":false},{"internalType":"struct BN254.G1Point","name":"newAggregateKey","type":"tuple","components":[{"internalType":"uint256","name":"X","type":"uint256"},{"internalType":"uint256","name":"Y","type":"uint256"}],"indexed":false}],"type":"event","name":"AggregateBN254KeyUpdated","anonymous":false},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}],"indexed":false},{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"enum IKeyRegistrarTypes.CurveType","name":"curveType","type":"uint8","indexed":false}],"type":"event","name":"KeyDeregistered","anonymous":false},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}],"indexed":false},{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"enum IKeyRegistrarTypes.CurveType","name":"curveType","type":"uint8","indexed":false},{"internalType":"bytes","name":"pubkey","type":"bytes","indexed":false}],"type":"event","name":"KeyRegistered","anonymous":false},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}],"indexed":false},{"internalType":"enum IKeyRegistrarTypes.CurveType","name":"curveType","type":"uint8","indexed":false}],"type":"event","name":"OperatorSetConfigured","anonymous":false},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"checkKey","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"enum IKeyRegistrarTypes.CurveType","name":"curveType","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"configureOperatorSet"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]}],"stateMutability":"nonpayable","type":"function","name":"deregisterKey"},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"getBN254Key","outputs":[{"internalType":"struct BN254.G1Point","name":"g1Point","type":"tuple","components":[{"internalType":"uint256","name":"X","type":"uint256"},{"internalType":"uint256","name":"Y","type":"uint256"}]},{"internalType":"struct BN254.G2Point","name":"g2Point","type":"tuple","components":[{"internalType":"uint256[2]","name":"X","type":"uint256[2]"},{"internalType":"uint256[2]","name":"Y","type":"uint256[2]"}]}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"getECDSAAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"getECDSAKey","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"getKeyHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]}],"stateMutability":"view","type":"function","name":"getOperatorSetCurveType","outputs":[{"internalType":"enum IKeyRegistrarTypes.CurveType","name":"","type":"uint8"}]},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"}],"stateMutability":"view","type":"function","name":"isKeyGloballyRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"isRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"struct OperatorSet","name":"operatorSet","type":"tuple","components":[{"internalType":"address","name":"avs","type":"address"},{"internalType":"uint32","name":"id","type":"uint32"}]},{"internalType":"bytes","name":"pubkey","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"registerKey"},{"inputs":[],"stateMutability":"view","type":"function","name":"version","outputs":[{"internalType":"string","name":"","type":"string"}]}],"devdoc":{"kind":"dev","methods":{"checkKey((address,uint32),address)":{"details":"This function is called by the AVSRegistrar when an operator registers for an AVSOnly authorized callers for the AVS can call this functionReverts if operator doesn't have a registered key for this operator set","params":{"operator":"Address of the operator","operatorSet":"The operator set to check and update"},"returns":{"_0":"whether the operator has a registered key"}},"configureOperatorSet((address,uint32),uint8)":{"details":"Only authorized callers for the AVS can configure operator sets","params":{"curveType":"Type of curve (ECDSA, BN254)","operatorSet":"The operator set to configure"}},"deregisterKey(address,(address,uint32))":{"details":"Can be called by avs directly or by addresses they've authorized via PermissionControllerReverts if key was not registeredKeys remain in global key registry to prevent reuse","params":{"operator":"Address of the operator to deregister key for","operatorSet":"The operator set to deregister the key from"}},"getBN254Key((address,uint32),address)":{"params":{"operator":"Address of the operator","operatorSet":"The operator set to get the key for"},"returns":{"g1Point":"The BN254 G1 public key","g2Point":"The BN254 G2 public key"}},"getECDSAAddress((address,uint32),address)":{"params":{"operator":"Address of the operator","operatorSet":"The operator set to get the key for"},"returns":{"_0":"pubkey The ECDSA public key"}},"getECDSAKey((address,uint32),address)":{"params":{"operator":"Address of the operator","operatorSet":"The operator set to get the key for"},"returns":{"_0":"pubkey The ECDSA public key"}},"getKeyHash((address,uint32),address)":{"params":{"operator":"Address of the operator","operatorSet":"The operator set to get the key hash for"},"returns":{"_0":"keyHash The key hash"}},"getOperatorSetCurveType((address,uint32))":{"params":{"operatorSet":"The operator set to get configuration for"},"returns":{"_0":"The operator set configuration"}},"isKeyGloballyRegistered(bytes32)":{"params":{"keyHash":"Hash of the key"},"returns":{"_0":"True if the key is globally registered"}},"isRegistered((address,uint32),address)":{"params":{"operator":"Address of the operator","operatorSet":"The operator set to check"},"returns":{"_0":"True if the key is registered"}},"registerKey(address,(address,uint32),bytes,bytes)":{"details":"Can be called by operator directly or by addresses they've authorized via PermissionControllerReverts if key is already registered","params":{"operator":"Address of the operator to register key for","operatorSet":"The operator set to register the key for","pubkey":"Public key bytes","signature":"Signature proving ownership (only needed for BN254 keys)"}},"version()":{"returns":{"_0":"The version string in SemVer format (e.g., \"1.1.1\")"}}},"version":1},"userdoc":{"kind":"user","methods":{"checkKey((address,uint32),address)":{"notice":"Checks if an operator has a registered key"},"configureOperatorSet((address,uint32),uint8)":{"notice":"Configures an operator set with curve type"},"deregisterKey(address,(address,uint32))":{"notice":"Deregisters a cryptographic key for an operator with a specific operator set"},"getBN254Key((address,uint32),address)":{"notice":"Gets the BN254 public key for an operator with a specific operator set"},"getECDSAAddress((address,uint32),address)":{"notice":"Gets the ECDSA public key for an operator with a specific operator set"},"getECDSAKey((address,uint32),address)":{"notice":"Gets the ECDSA public key for an operator with a specific operator set as bytes"},"getKeyHash((address,uint32),address)":{"notice":"Gets the key hash for an operator with a specific operator set"},"getOperatorSetCurveType((address,uint32))":{"notice":"Gets the configuration for an operator set"},"isKeyGloballyRegistered(bytes32)":{"notice":"Checks if a key hash is globally registered"},"isRegistered((address,uint32),address)":{"notice":"Checks if a key is registered for an operator with a specific operator set"},"registerKey(address,(address,uint32),bytes,bytes)":{"notice":"Registers a cryptographic key for an operator with a specific operator set"},"version()":{"notice":"Returns the semantic version string of the contract."}},"version":1}},"settings":{"remappings":["@eigenlayer-contracts/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/","@eigenlayer-middleware/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/","@hourglass-monorepo/=../.devkit/contracts/lib/hourglass-monorepo/contracts/","@openzeppelin-upgrades/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","@openzeppelin/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/openzeppelin-contracts/","@project/=src/","ds-test/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/ds-test/src/","eigenlayer-contracts/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/","eigenlayer-middleware/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/","erc4626-tests/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=../.devkit/contracts/lib/forge-std/src/","hourglass-monorepo/=../.devkit/contracts/lib/hourglass-monorepo/contracts/","openzeppelin-contracts-upgradeable-v4.9.0/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/openzeppelin-contracts/","zeus-templates/=../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IKeyRegistrar.sol":"IKeyRegistrar"},"evmVersion":"cancun","libraries":{}},"sources":{"../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IKeyRegistrar.sol":{"keccak256":"0xb377c9c9acff800d4736f65dca009a749338886d3a3f4d18a6bf3c3f414cf7ec","urls":["bzz-raw://44d50c3e8da0642cde59545285ef3649053eb3598d35fdb179894ff5951b4588","dweb:/ipfs/QmZQSNMY54oqLEr8viBbnia12eAQU3h31p8eWktu9SNkas"],"license":"BUSL-1.1"},"../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISemVerMixin.sol":{"keccak256":"0xa7cfe506856653310b402b73baca96af947897c02b5b35a310640443e1332791","urls":["bzz-raw://e23941c3b825e02e3521dbbae63c5b58fb48d17125669fc0cd3c8d5a8c272d6e","dweb:/ipfs/QmaPfH8XkpT1nsEdJe34YbQCwBf1Gq89EvUPvG1wPforZa"],"license":"BUSL-1.1"},"../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BN254.sol":{"keccak256":"0x24cd24d441907f69ab7dbe002e06f656dd8434235cffd59c97b8438c6a9a98fc","urls":["bzz-raw://074aa5523e2fe3e6f1b74fb207e08b41d2f6de34412da10e81d7f0b4720942cc","dweb:/ipfs/QmWvdpuvZGeKdEtzaCoAP2gvpggRBwh1cUs4fdWjV9DwW6"],"license":"MIT"},"../.devkit/contracts/lib/hourglass-monorepo/contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/OperatorSetLib.sol":{"keccak256":"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812","urls":["bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41","dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx"],"license":"BUSL-1.1"}},"version":1},"id":26}